---
- name: Instalar Docker no Host Remoto
  hosts: siriustech
  become: yes
  remote_user: ubuntu

  tasks:
    - name: Atualizar lista de pacotes
      apt:
        update_cache: yes
      register: apt_atualizado

    - name: Aguardar um tempo
      pause:
        seconds: 120

    - name: Instalar pacotes necessários
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present
      when: apt_atualizado is succeeded

    - name: Adicionar chave GPG do Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adicionar repositório do Docker
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Instalar Docker
      apt:
        name: docker-ce
        state: present

    - name: Garantir que o Docker esteja rodando
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Ensure current user is in docker group
      user:
        name: ubuntu
        groups: docker
        append: yes
      become: true

    - name: Reiniciar sessão SSH
      shell: "sudo service ssh restart"
      async: 0
      poll: 0
      become: true

    - name: Install Docker Compose
      shell: curl -fsSL https://github.com/docker/compose/releases/latest/download/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose
      become: true

    - name: Verificar a versão do docker-compose
      command: docker-compose --version
      register: docker_compose_version
      changed_when: false
      failed_when: docker_compose_version.rc != 0
      become: true

    - name: Mostrar a versão do docker-compose
      debug:
        var: docker_compose_version.stdout_lines
      become: true

    - name: Copiar chave SSH para a instância
      copy:
        src: ~/.ssh/id_rsa
        dest: /home/ubuntu/.ssh/id_rsa
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Copiar chave SSH pública
      ansible.builtin.copy:
        content: ~/.ssh/id_rsa.pub
        dest: ~/.ssh/id_rsa.pub
        mode: '0644'

    - name: Clonar repositório Git dockerfiles
      become: yes
      become_user: ubuntu
      git:
        repo: 'git@github.com:Devs2Blu-Hackeek2023/dockerfiles.git'
        dest: /home/ubuntu/app
        version: main
        accept_hostkey: yes  

    - name: Verificar se o diretório Git foi copiado
      stat:
        path: /home/ubuntu/app
      register: git_directory

    - name: Exibir mensagem de erro se o diretório não existe
      fail:
        msg: "Diretório do repositório Git não encontrado. Certifique-se de que o Git clone foi bem-sucedido."
      when: not git_directory.stat.exists

    # - name: Iniciar contêineres Docker
    #   become_user: ubuntu
    #   command: docker-compose -f /home/ubuntu/app/dockerfiles/co2now/docker-compose.yml up -d
    #   args:
    #     chdir: /home/ubuntu/app/dockerfiles/co2now/
    #   become: true
    #   environment:
    #     - "{{ lookup('env','ASPNETCORE_ENVIRONMENT') }}"
    #     - "{{ lookup('env','ONLINECONNECTION') }}"
    #     - "{{ lookup('env','DATABASE') }}"
    #     - "{{ lookup('env','USER_ID') }}"
    #     - "{{ lookup('env','PASSWORD') }}"
    #   when: git_directory.stat.exists

    - name: Iniciar contêineres Docker
      become_user: ubuntu
      command: /bin/bash
      args:
        chdir: /home/ubuntu/app
        stdin: |
          docker-compose up -d
      become: true
      environment:
        ASPNETCORE_ENVIRONMENT: "{{ lookup('env','ASPNETCORE_ENVIRONMENT') }}"
        ONLINECONNECTION: "{{ lookup('env','ONLINECONNECTION') }}"
        DATABASE: "{{ lookup('env','DATABASE') }}"
        USER_ID: "{{ lookup('env','USER_ID') }}"
        PASSWORD: "{{ lookup('env','PASSWORD') }}"

    